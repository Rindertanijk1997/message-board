# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: rindert
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: message-board-backend
# "service" is the name of this project. This will also be added to your AWS resource names.
service: message-board

provider:
  name: aws
  runtime: nodejs14.x
  region: eu-central-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "*"

functions:
  createMessage:
    handler: handler.createMessage
    events:
      - http:
          path: messages
          method: post
          cors:
            origins:
              - '*'  # Allow all origins
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowMethods:
              - OPTIONS
              - POST
            allowCredentials: false
      - http:
          path: messages
          method: options  # Enable OPTIONS for CORS preflight
          cors: true

  getAllMessages:
    handler: handler.getAllMessages
    events:
      - http:
          path: messages
          method: get
          cors:
            origins:
              - '*'  # Allow all origins
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowMethods:
              - OPTIONS
              - GET
            allowCredentials: false
      - http:
          path: messages
          method: options  # Enable OPTIONS for CORS preflight
          cors: true

  updateMessage:
    handler: handler.updateMessage
    events:
      - http:
          path: messages/{id}
          method: put
          cors:
            origins:
              - '*'  # Allow all origins
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowMethods:
              - OPTIONS
              - PUT
            allowCredentials: false
      - http:
          path: messages/{id}
          method: options  # Enable OPTIONS for CORS preflight
          cors: true

  deleteMessage:
    handler: handler.deleteMessage
    events:
      - http:
          path: messages/{id}
          method: delete
          cors:
            origins:
              - '*'  # Allow all origins
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowMethods:
              - OPTIONS
              - DELETE
            allowCredentials: false
      - http:
          path: messages/{id}
          method: options  # Enable OPTIONS for CORS preflight
          cors: true

resources:
  Resources:
    MessagesTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: 'MessagesTable'
        AttributeDefinitions:
          - AttributeName: 'id'
            AttributeType: 'S'
        KeySchema:
          - AttributeName: 'id'
            KeyType: 'HASH'
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
